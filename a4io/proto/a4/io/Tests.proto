import "a4/io/A4.proto";
import "a4/io/A4Stream.proto";

package a4.io;

message TestEventExt {
  extend TestEvent {
    optional int32 my_extension_value = 100000;
  }
}

message TestEvent
{
    option (major_version) = "v2011.10";
    option (minor_version) = "fix42";
    option (patch_version) = "For my 83 run over the Data";

    optional int32 event_number = 1;
    optional double event_data = 2;
    
    extensions 100000 to max;
}

message TestRunLB
{
    optional int32 run = 1;
    optional int32 lumiblock = 2;
}

message TestMetaData
{
    option (major_version) = "v2011.10-MD";
    option (minor_version) = "fix42";
    option (patch_version) = "For my 83 run over the Data";

    optional int32 meta_data = 1 [(merge)=MERGE_ADD];
}

message TestMergeMetaDataStatic
{
    option (fixed_class_id) = 41;

    option (major_version) = "v2011.10-MD-MERGE";
    option (patch_version) = "For my 83 run over the Data";

    optional int32 meta_data = 1 [(merge)=MERGE_ADD];
}

message TestMergeMetaData
{
    option (fixed_class_id) = 41;

    option (major_version) = "v2011.10-MD-MERGE";
    option (patch_version) = "For my 83 run over the Data";

    optional int32 meta_data = 1 [(merge)=MERGE_ADD];
    repeated TestRunLB lumiblock = 2 [(merge)=MERGE_UNION];
    repeated int32 run = 9 [(merge)=MERGE_UNION];
    repeated int32 period = 3 [(merge)=MERGE_UNION];
    optional bool simulation = 4 [(merge)=MERGE_BLOCK_IF_DIFFERENT];
    repeated string comments = 5 [(merge)=MERGE_APPEND];
    optional string tags = 6 [(merge)=MERGE_ADD];
    optional double efficiency = 7 [(merge)=MERGE_MULTIPLY];
    optional bool error = 8 [(merge)=MERGE_AND];
}


message TestLinks {
    repeated int64 Backward = 1;
    repeated int64 Forward = 2;
}
message TestLanguage {
    required string Code = 1;
    optional string Country = 2; 
}
message TestName {
    repeated TestLanguage Language = 1;
    optional string Url = 2;
}
message TestDocument {
    required int64 DocId = 1;
    optional TestLinks Links = 2;
    repeated TestName Name = 3;
}



